No main file specified!

Usage: jakstab [options] -m mainfile [ modules... ]

Options:
  -a address          Start analysis at given virtual address.
  -b                  Background mode, i.e., disable shutdown hook on enter.
  -h                  Use heuristics to determine additional procedures and add
                      pseudo-calls to include them in disassembly.
  -s                  Output all reached states after analysis.
  -v level            Set verbosity to value. Default is 3.
  --all-edges         Generate a true over-approximation and add edges to all
                      possible addresses when over-approximating a jump (very
                      slow!).
  --asm-trace         Output any error trace as a list of assembly instructions
                      instead of IL statements.
  --backward          Perform secondary cpa as a backward analysis.
  --basicblocks       Build CFA from basic-blocks instead of single statements.
--cpa {bcdfgikprstvx} Configure which analyses to use for control flow
                     reconstruction.
             Based Constant Propagation: Constant propagation with
                      region-offset values.
             Constant Propagation: For each location, compute the
                      variables and memory locations that have a constant value.
             Dummy analysis: Over-approximates all data to a single top
                      element.
             Forward substitution: Substitute expressions that are
                      guaranteed to be constant over all paths, and use the
                      substituted statements for other analyses.
             Sign analysis: For each variable, compute its sign (-, 0,
                      or +).
             Interval analysis: Compute strided intervals with region information. Strided interval analysis is a path insensitive data flow analysis using intervals with congruence information, i.e., only every nth element is included in an interval of stride n. It is especially useful for dealing with switch statements for which the value being switched on is unknown, e.g., because it depends on input that can take a wide range of values.
             K-Set analysis: For each variable, collect up to k values
                      per location (non-relational).
             Predicate abstraction: Experimental, partial
                      implementation of predicate abstraction.
             Reaching definitions analysis: For each program point,
                      calculate the set of variable definitions that reach it.
             Call-stack analysis: Maintain a history of call-sites for
                      each location.
             Trace replay analysis: Replays pre-recorded traces as an
                      under-approximation of control flow.
             BAT-VPC: VPC-sensitive version of Bounded Address
                      Tracking.
             Bounded Address Tracking: Enumerate region-based addresses up to a bound per variable per location.
Secondary analyses to be performed after the initial CFG reconstruction and dead code elimination
